image: mcr.microsoft.com/dotnet/sdk:3.1

stages:
  - build
  - test
  - scan
  - deploy

variables:
  project: "minecraft-panel-api"
  projectDAL: "minecraft-panel-api.DAL"
  projectPlayers: "minecraft-panel-api.Players"
  projectGateWay: "minecraft-panel-api.GateWay"
  projectTests: "minecraft-panel-api.Tests"

build:
  stage: build
  script:
    - dotnet restore minecraft-panel-api.sln
    - dotnet build minecraft-panel-api.sln
  artifacts:
    untracked: true

test:
  stage: test
  allow_failure: true
  script:
    - dotnet test --collect:"XPlat Code Coverage"
  after_script:
    - dotnet $HOME/.nuget/packages/reportgenerator/4.7.1/tools/netcoreapp3.0/ReportGenerator.dll "-reports:minecraft-panel-api.Tests/TestResults/*/coverage.cobertura.xml" "-targetdir:coveragereport" -reporttypes:Html
  artifacts:
    paths:
      - coveragereport

sonarscan:
  stage: scan
  script:
    # Install OpenJDK-8
    - apt-get update && apt-get install -y openjdk-11-jdk && apt-get install -y ant && apt-get clean;
    # Fix certificate issues
    - apt-get update && apt-get install -y ca-certificates-java && apt-get clean && update-ca-certificates -f;
    - chmod +x sonarcube/sonar-scanner-4.4.0.2170/bin/sonar-scanner
    - dotnet sonarcube/SonarScanner.MSBuild.dll begin /k:"minecraft-panel-api" /d:sonar.host.url=$SONARQUBE_HOST /d:sonar.login=$SONARQUBE_LOGIN
    - dotnet build minecraft-panel-api.sln
    - dotnet sonarcube/SonarScanner.MSBuild.dll end /d:sonar.login=$SONARQUBE_LOGIN

deploy:
  stage: deploy
  image: docker:19.03.12
  dependencies: 
    - build
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  services:
    - docker:19.03.12-dind
  before_script:
    - apk add curl nodejs npm
    - npm install -g heroku
  script:
    #Add login details so we don't need to manually log in
    - touch ~/.netrc
    - echo "machine api.heroku.com" >> ~/.netrc
    - echo "  login $HEROKU_EMAIL" >> ~/.netrc
    - echo "  password $HEROKU_API_KEY" >> ~/.netrc
    - echo "machine git.heroku.com" >> ~/.netrc
    - echo "  login $HEROKU_EMAIL" >> ~/.netrc
    - echo "  password $HEROKU_API_KEY" >> ~/.netrc
    #Heroku actions
    - heroku container:login
    #Auth
    - docker build -f Dockerfile.Auth --tag web .
    - docker tag web registry.heroku.com/$HEROKU_APP_AUTH/web
    - docker push registry.heroku.com/$HEROKU_APP_AUTH/web
    - heroku container:release web --app $HEROKU_APP_AUTH
    #GateWay
    - docker build -f Dockerfile.GateWay --tag web .
    - docker tag web registry.heroku.com/$HEROKU_APP_GATEWAY/web
    - docker push registry.heroku.com/$HEROKU_APP_GATEWAY/web
    - heroku container:release web --app $HEROKU_APP_GATEWAY
    #Interaction
    - docker build -f Dockerfile.Interaction --tag web .
    - docker tag web registry.heroku.com/$HEROKU_APP_INTERACTION/web
    - docker push registry.heroku.com/$HEROKU_APP_INTERACTION/web
    - heroku container:release web --app $HEROKU_APP_INTERACTION

    - heroku container:logout
    #Remove credentials
    - rm ~/.netrc
